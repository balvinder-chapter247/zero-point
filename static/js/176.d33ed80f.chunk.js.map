{"version":3,"file":"static/js/176.d33ed80f.chunk.js","mappings":"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","sources":["common/inputForm.js","components/InnerPageBanner/index.js","views/AddCourse/index.js"],"sourcesContent":["import React from 'react'\r\nimport ReactTooltip from 'react-tooltip';\r\nconst InputForms = (\r\n    {\r\n        className,\r\n        onBlur,\r\n        labelText,\r\n        labelclassName,\r\n        dataTip,\r\n        inputclassName,\r\n        labeltext,\r\n        labelRequired,\r\n        iconClassName,\r\n        type = \"text\",\r\n        id = \"\",\r\n        placeholder = \"\",\r\n        name,\r\n        value,\r\n        maxLength,\r\n        required = false,\r\n        readOnly = false,\r\n        disabled = false,\r\n        errorMessage = \"\",\r\n        onChange,\r\n        icon,\r\n        selected,\r\n        src,\r\n        onClick\r\n    }\r\n) => {\r\n    return (\r\n        <>\r\n            <div className='form-group w-full'>\r\n            {\r\n                labelText && labelText.length ? \r\n                <label className={labelclassName}>{labelText}<span className='required'>{labelRequired}</span></label>\r\n                : null\r\n            }\r\n            <div className=\"input_group relative flex items-center modified w-full\">\r\n            <input type={type} name={name}\r\n                value={value }\r\n                onChange={onChange}\r\n                onBlur={onBlur ? onBlur : \"\"}\r\n                className=\"bg-white border border-slate-300 focus:border-blue-500 focus:outline-none px-3 py-2 rounded w-full\"\r\n                placeholder={placeholder} />\r\n                \r\n                {\r\n                    iconClassName ?\r\n                        <span className='form-icon absolute right-2'>\r\n                            <i className={iconClassName} onClick={onClick} data-tip={dataTip ? dataTip : null}></i>\r\n                            <ReactTooltip />\r\n                        </span>\r\n                        : null\r\n                }\r\n                {\r\n                    src ?\r\n                        <span className='form-icon absolute right-2'>\r\n                            <img src={src} />\r\n                        </span>\r\n                        : null\r\n                }\r\n            </div>\r\n            \r\n            <span className='error text-red-500 text-sm font-medium'>\r\n                {errorMessage}\r\n            </span>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default InputForms","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InnerPageBanner = ({title}) => {\r\n  return (\r\n    <div className='inner_page_breadcrumb relative flex items-center'>\r\n      <div className='container px-4 mx-auto'>\r\n        <div className='breadcrumb-content text-white text-center relative'>\r\n            <h1>{title}</h1>\r\n            <nav className=\"rounded-md w-full\">\r\n                <ol className=\"list-reset flex justify-center\">\r\n                    <li className='text-white'><Link to=\"\" className=\"\">Home</Link></li>\r\n                    <li className='text-white'><span className=\"mx-2\">/</span></li>\r\n                    <li className=\"text-white\">{title}</li>\r\n                </ol>\r\n            </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InnerPageBanner\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport validate from 'validate.js';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { Toaster } from '../../helper/react-toast';\r\nimport { AddCourseSchema } from '../../validators';\r\nimport InnerPageBanner from '../../components/InnerPageBanner';\r\nimport InputForms from '../../../src/common/inputForm'\r\nimport SelectForm from '../../common/selectForm';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport AddInputs from './components/Addinput';\r\nimport { Link } from \"react-router-dom\";\r\nimport Category from './components/SelectValue';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\nconst category = [\r\n    { optionValue: \"Programming\", label: \"Programming\" },\r\n    { optionValue: \"Data Analytics\", label: \"Data Analytics\" },\r\n];\r\nconst subCategory = [\r\n    { optionValue: \"Web Development\", label: \"Web Development\" },\r\n    { optionValue: \"Data Science\", label: \"Data Science\" },\r\n];\r\n\r\nconst AddCourse = () => {\r\n\r\n    // const [category, setCategory] = React.useState();\r\n\r\n    ///State for our form\r\n    const [formState, setFormState] = React.useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n    });\r\n\r\n    ///For validating error everytime change in inputs\r\n    useEffect(() => {\r\n        const errors = validate(formState.values, AddCourseSchema);\r\n        setFormState((formState) => ({\r\n            ...formState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {},\r\n        }));\r\n    }, [formState.values]);\r\n\r\n    ///Handle change for storing input values to state.\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        setFormState((formState) => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                [event.target.name]:\r\n                    event.target.type === \"checkbox\"\r\n                        ? event.target.checked\r\n                        : event.target.value,\r\n            },\r\n            touched: {\r\n                ...formState.touched,\r\n                [event.target.name]: true,\r\n            },\r\n        }));\r\n        console.log(formState.values.category, \"test\");\r\n    };\r\n\r\n    ///Submiting values to api.\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        if (formState.isValid) {\r\n            let addedCourse = JSON.parse(localStorage.getItem(\"addedCourse\"));\r\n            let tempArray = addedCourse;\r\n            tempArray.push(formState.values);\r\n            localStorage.setItem(\"addedCourse\", JSON.stringify(tempArray));\r\n            {\r\n                Toaster({\r\n                    type: \"success\",\r\n                    text: \"Course Added Successfully.\"\r\n                })\r\n            }\r\n        }\r\n        setFormState((formState) => ({\r\n            ...formState,\r\n            touched: {\r\n                ...formState.touched,\r\n                ...formState.errors,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const hasError = (field) =>\r\n        formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n    const manageEditorState = (editorState) => {\r\n        const editorData = editorState.getData();\r\n        setFormState((formState) => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                details: editorData\r\n\r\n            },\r\n            touched: {\r\n                ...formState.touched,\r\n                details: true,\r\n            },\r\n        }));\r\n\r\n    }\r\n    const manageImageFile = (event) => {\r\n        const imageFilepath = event.target.files[0] || \"\"\r\n        setFormState((formState) => ({\r\n            ...formState,\r\n            values: {\r\n                ...formState.values,\r\n                courseImage: imageFilepath\r\n\r\n            },\r\n            touched: {\r\n                ...formState.touched,\r\n                courseImage: true,\r\n            },\r\n        }));\r\n    }\r\n    const [inputList, setInputList] = useState([{ objective: \"\" }]);\r\n    const [form, setFormValue] = useState(\r\n        {\r\n            values: \"\"\r\n        }\r\n    )\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    ///For disable button after 7 objectives\r\n    const [isDisabledAdding, setIsDisabledAdding] = useState(false)\r\n    useEffect(() => {\r\n        \r\n        if (inputList.length >= 4) {\r\n            setIsDisabledAdding(true);\r\n            Toaster(\r\n                {\r\n                    type: \"info\",\r\n                    text: \"You reached max limit of adding objectives.\"\r\n                }\r\n            )\r\n        }\r\n        else setIsDisabledAdding(false)\r\n    }, [inputList])\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { objective: \"\" }]);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <main className=\"bg-gray-100\">\r\n                <InnerPageBanner title={\"Add Course\"} />\r\n                <section className='sec-padding'>\r\n                    <div className=\"course-header border-b\">\r\n                        <div className=\"container mx-auto px-4 flex items-center justify-between pb-4\">\r\n                            <h2 className=\"font-bold text-3xl mb-0\">Add Course</h2>\r\n                            <Link to=\"course-builder\">\r\n                                <button className=\"px-4 py-3 text-sm blue-btn text-white rounded shadow-sm\">Edit in Builder</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container m-auto \">\r\n                        <div className=\"w-full\">\r\n                            <div className='bg-white p-4 pb-8 mt-6 rounded-lg'>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"grid md:grid-cols-3 gap-4\">\r\n                                        <div className='col-span-2'>\r\n                                            <div className=\"grid md:grid-cols-2 gap-4\">\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Title</span>\r\n                                                    </label>\r\n                                                    <InputForms\r\n                                                        className=\"block font-medium\"\r\n                                                        type='text'\r\n                                                        name=\"title\"\r\n                                                        value={formState.values.title || \"\"}\r\n                                                        errorMessage={hasError(\"title\") ?\r\n                                                            formState.errors.title[0] : null}\r\n                                                        onChange={handleChange}\r\n                                                        placeholder=\"\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Subtitle</span>\r\n                                                    </label>\r\n                                                    <InputForms\r\n                                                        className=\"block font-medium mb-0\"\r\n                                                        type='text'\r\n                                                        name=\"sub_title\"\r\n                                                        value={formState.values.sub_title || \"\"}\r\n                                                        onChange={handleChange}\r\n                                                        errorMessage={hasError(\"sub_title\") ?\r\n                                                            formState.errors.sub_title[0] : null}\r\n                                                        placeholder=\"\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Category</span>\r\n                                                    </label>\r\n                                                    <select className=\"bg-white border border-slate-300 focus:border-blue-500 focus:outline-none px-3 py-2 rounded-md w-full\"\r\n                                                        name='category'\r\n                                                        value={formState.values.category || \"\"}\r\n                                                        onChange={handleChange}\r\n                                                    >\r\n                                                        <option>Choose Option</option>\r\n                                                        <option value=\"category 1\">Option 1</option>\r\n                                                        <option value=\"category 2\">Option 2</option>\r\n                                                        <option value=\"category 3\">Option 3</option>\r\n                                                    </select>\r\n                                                    <div>\r\n                                                        <span className='error text-red-500 text-sm font-medium'>\r\n                                                            {hasError(\"category\") ?\r\n                                                                formState.errors.category[0] : null}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Sub Category</span>\r\n                                                    </label>\r\n                                                    <select className=\"bg-white border border-slate-300 focus:border-blue-500 focus:outline-none px-3 py-2 rounded-md w-full\"\r\n                                                        name='sub_category'\r\n                                                        value={formState.values.sub_category || \"\"}\r\n\r\n                                                        onChange={handleChange}\r\n                                                    >\r\n                                                        <option selected>Choose Option</option>\r\n                                                        <option value=\"Sub Category 1\">Option 1</option>\r\n                                                        <option value=\"Sub Category 2\">Option 2</option>\r\n                                                        <option value=\"Sub Category 3\">Option 3</option>\r\n                                                    </select>\r\n                                                    <div>\r\n                                                        <span className='error text-red-500 text-sm font-medium'>\r\n                                                            {hasError(\"sub_category\") ?\r\n                                                                formState.errors.sub_category[0] : null}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Level</span>\r\n                                                    </label>\r\n                                                    <select className=\"bg-white border border-slate-300 focus:border-blue-500 focus:outline-none px-3 py-2 rounded-md w-full\"\r\n                                                        name='level'\r\n                                                        value={formState.values.level || \"\"}\r\n\r\n                                                        onChange={handleChange}\r\n                                                    >\r\n                                                        <option>Choose Option</option>\r\n                                                        <option value=\"Level 1\">Level 1</option>\r\n                                                        <option value=\"Level 2\">Level 2</option>\r\n                                                        <option value=\"Level 3\">Level 3</option>\r\n                                                    </select>\r\n                                                    <div>\r\n                                                        <span className='error text-red-500 text-sm font-medium'>\r\n                                                            {hasError(\"level\") ?\r\n                                                                formState.errors.level[0] : null}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                            Price</span>\r\n                                                    </label>\r\n                                                    <InputForms\r\n                                                        className=\"block font-medium\"\r\n                                                        type='text'\r\n                                                        name=\"price\"\r\n                                                        value={formState.values.price || \"\"}\r\n                                                        errorMessage={hasError(\"price\") ?\r\n                                                            formState.errors.price[0] : null}\r\n                                                        onChange={handleChange}\r\n                                                        placeholder=\"\"\r\n                                                    />\r\n                                                </div>\r\n\r\n                                                <div className=\"\">\r\n                                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                                        <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500\">\r\n                                                            Banner Image</span>\r\n                                                    </label>\r\n                                                    <input className=\"form-control\r\n                                            block\r\n                                            w-full\r\n                                            px-3\r\n                                            py-1.5\r\n                                            text-base\r\n                                            font-normal\r\n                                            text-gray-700\r\n                                            bg-white bg-clip-padding\r\n                                            border border-solid border-gray-300\r\n                                            rounded\r\n                                            transition\r\n                                            ease-in-out\r\n                                            m-0\r\n                                            focus:text-gray-700 focus:bg-white focus:border-blue-400 focus:outline-none\"\r\n                                                        type=\"file\"\r\n                                                        name=\"bannerImage\"\r\n\r\n\r\n                                                        onChange={manageImageFile}\r\n                                                    />\r\n                                                    <span className='error text-red-500 text-sm font-medium'>\r\n                                                        {hasError(\"courseImage\") ?\r\n                                                            formState.errors.courseImage[0] : null}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div>\r\n\r\n                                                </div>\r\n                                                {/* <span className='error text-red-500 text-sm font-medium'>\r\n                                                    {hasError(\"bannerImage\") ?\r\n                                                        formState.errors.bannerImage[0] : null}\r\n                                                </span> */}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Learning objective section starts here */}\r\n                                        <div className='learning_objectives'>\r\n                                            <div className='objective_items'>\r\n                                                <div className=\"obj_group\">\r\n                                                    <div className={\r\n                                                        `justify-center items-center custom  width-100 ${inputList.length !== 1 ? \"\" : null}`}>\r\n                                                        <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                            <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                                Learning Objectives-1</span>\r\n                                                        </label>\r\n                                                        <InputForms\r\n\r\n                                                            labelRequired=\"*\"\r\n                                                            labelclassName=\"block font-medium mb-2 text-gray-700\"\r\n                                                            className=\"block font-medium\"\r\n                                                            type='text'\r\n                                                            value={formState.values.objective1 || \"\"}\r\n                                                            errorMessage={hasError(\"objective1\") ?\r\n                                                                formState.errors.objective1[0] : null}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"obj_group\">\r\n                                                    <div className={\r\n                                                        `justify-center items-center custom mt-2 width-100 `}>\r\n                                                        <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                            <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                                Learning Objectives-2</span>\r\n                                                        </label>\r\n                                                        <InputForms\r\n\r\n                                                            labelRequired=\"*\"\r\n                                                            labelclassName=\"block font-medium mb-2 text-gray-700\"\r\n                                                            className=\"block font-medium\"\r\n                                                            type='text'\r\n                                                            value={formState.values.objective2 || \"\"}\r\n                                                            errorMessage={hasError(\"objective2\") ?\r\n                                                                formState.errors.objective2[0] : null}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"obj_group\">\r\n                                                    <div className={\r\n                                                        `justify-center items-center custom mt-2 width-100 `}>\r\n                                                        <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                            <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                                Learning Objectives-3</span>\r\n                                                        </label>\r\n                                                        <InputForms\r\n\r\n                                                            labelRequired=\"*\"\r\n                                                            labelclassName=\"block font-medium mb-2 text-gray-700\"\r\n                                                            className=\"block font-medium\"\r\n                                                            type='text'\r\n                                                            value={formState.values.objective3 || \"\"}\r\n                                                            errorMessage={hasError(\"objective3\") ?\r\n                                                                formState.errors.objective3[0] : null}\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                \r\n                                                { inputList.map((x, i) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <div className=\"obj_group\">\r\n                                                                <label className=\"block text-gray-700 text-sm  font-bold mb-2\">\r\n                                                                    <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                                        {`Learning Objectives-${3 + 1 + i}`}</span>\r\n                                                                </label>\r\n\r\n                                                                <div className={\r\n                                                                    `flex justify-center items-center  custom w-full `}>\r\n                                                                    <InputForms\r\n\r\n                                                                        labelRequired=\"*\"\r\n                                                                        labelclassName=\"block font-medium mb-2 text-gray-700\"\r\n                                                                        className=\"block font-medium w-full\"\r\n                                                                        type='text'\r\n                                                                        name=\"objective\"\r\n                                                                        value={x.firstName}\r\n                                                                        onChange={e => handleInputChange(e, i)}\r\n                                                                    />\r\n                                                                    <div className=\"remove_div_input\">\r\n                                                                        {inputList.length !== 1 && <div\r\n                                                                            className=\"mx-2\"\r\n                                                                            onClick={() => handleRemoveClick(i)}>\r\n                                                                            <i className=\"fa-solid fa-trash-can delete-button\" data-tip=\"Remove item\" />\r\n                                                                            <ReactTooltip />\r\n                                                                        </div>}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    );\r\n                                                })}\r\n                                                {/* <AddInputs setClick={click => clickChild = click}/> */}\r\n                                            </div>\r\n                                            <div className='add_btn' data-tip={isDisabledAdding ? \"You can add max 7\" : \"\"}>\r\n                                                <button type='button' onClick={handleAddClick}\r\n                                                    className={`blue-btn text-white font-semibold mt-4 py-2 px-4 rounded ${isDisabledAdding ? \"disabled\" : \"\"}`}\r\n                                                    disabled={isDisabledAdding}\r\n                                                >\r\n                                                    Add Objectives\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ToastContainer\r\n                                            position=\"right\"\r\n                                            autoClose={5000}\r\n                                            hideProgressBar={false}\r\n                                            newestOnTop={false}\r\n                                            closeOnClick\r\n                                            rtl={false}\r\n                                            pauseOnFocusLoss\r\n                                            draggable\r\n                                            pauseOnHover\r\n                                        />\r\n\r\n                                        {/* Learning objective section end here */}\r\n\r\n                                        <div className='col-span-3 mt-2'>\r\n                                            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                                <span className=\"after:content-['*'] after:ml-0.5 after:text-red-500 block\">\r\n                                                    Details</span>\r\n                                            </label>\r\n                                            <CKEditor\r\n                                                editor={ClassicEditor}\r\n\r\n                                                name='details'\r\n                                                value={formState.values.details || \"\"}\r\n                                                errorMessage={hasError(\"details\") ?\r\n                                                    formState.errors.details[0] : null}\r\n                                                // onChange={handleChange}\r\n                                                enterMode='CKEDITOR.ENTER_BR'\r\n                                                shiftEnterMode='CKEDITOR.ENTER_P'\r\n                                                onReady={(editor) => {\r\n                                                    // You can store the \"editor\" and use when it is needed.\r\n                                                    console.log('Editor is ready to use!', editor);\r\n                                                }}\r\n                                                onChange={(event, editor) => {\r\n                                                    manageEditorState(editor)\r\n\r\n                                                }}\r\n                                                onBlur={(event, editor) => {\r\n                                                    // console.log( 'Blur.', editor );\r\n                                                }}\r\n                                                onFocus={(event, editor) => {\r\n                                                    // console.log( 'Focus.', editor );\r\n                                                }}\r\n                                            />\r\n                                            <div>\r\n                                                <span className='error text-red-500 text-sm font-medium'>\r\n                                                    {hasError(\"details\") ?\r\n                                                        formState.errors.details[0] : null}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type='submit' className=\"blue-btn text-white font-semibold mt-6 py-2 px-8\">\r\n                                        Submit</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCourse"],"names":["className","onBlur","labelText","labelclassName","dataTip","labelRequired","inputclassName","labeltext","iconClassName","type","id","placeholder","name","value","maxLength","required","readOnly","disabled","errorMessage","onChange","src","icon","selected","onClick","length","title","to","React","isValid","values","touched","errors","formState","setFormState","useEffect","validate","AddCourseSchema","handleChange","event","persist","target","checked","console","log","category","handleSubmit","preventDefault","addedCourse","JSON","parse","localStorage","getItem","tempArray","push","setItem","stringify","Toaster","text","hasError","field","useState","objective","inputList","setInputList","isDisabledAdding","setIsDisabledAdding","InnerPageBanner","onSubmit","sub_title","sub_category","level","price","imageFilepath","files","courseImage","objective1","objective2","objective3","map","x","i","firstName","e","index","list","handleInputChange","splice","handleRemoveClick","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CKEditor","editor","ClassicEditor","details","enterMode","shiftEnterMode","onReady","editorState","editorData","getData","manageEditorState","onFocus"],"sourceRoot":""}